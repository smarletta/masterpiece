{"version":3,"file":"ContextImpl.spec.js","sourceRoot":"","sources":["ContextImpl.spec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,4DAAyD;AAEzD,+BAA8B;AAC9B,uDAA+C;AAG/C,IAAM,eAAe,uBAArB;IAII,gBAAgB;QACZ,MAAM,OAAO,GAAY,IAAI,yBAAW,EAAE,CAAC;QAE3C,aAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAGD,eAAe;QACX,MAAM,OAAO,GAAY,IAAI,yBAAW,EAAE,CAAC;QAE3C,aAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,iBAAe,CAAC,YAAY,CAAC,CAAC;IAClE,CAAC;CACJ,CAAA;AAfkB,4BAAY,GAAW,KAAK,CAAC;AAG5C;IADC,uBAAI;;;;uDAKJ;AAGD;IADC,uBAAI;;;;sDAKJ;AAfC,eAAe;IADpB,wBAAK;GACA,eAAe,CAgBpB","sourcesContent":["import { ContextImpl } from '../../src/core/ContextImpl';\nimport { Context } from '../../src/core/Context';\nimport { assert } from 'chai';\nimport { suite, test } from 'mocha-typescript';\n\n@suite\nclass ContextImplTest {\n    private static DEFAULT_PORT: number = 20202;\n\n    @test\n    instanceCreation() {\n        const context: Context = new ContextImpl();\n\n        assert.isOk(context); \n    }\n\n    @test\n    testDefaultPort() {\n        const context: Context = new ContextImpl();\n\n        assert.equal(context.getPort(), ContextImplTest.DEFAULT_PORT);\n    }\n}"]}